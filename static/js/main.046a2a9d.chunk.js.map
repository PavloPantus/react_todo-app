{"version":3,"sources":["header/Header.js","main/TodosList.js","main/Main.js","footer/FiltersList.js","footer/Footer.js","App.js","index.js"],"names":["Header","state","currentInputValue","handleInputChange","event","_this","setState","target","value","handleInputEnter","key","SaveCurrentInput","unicKey","Date","props","AppSetState","prevState","todos","concat","Object","toConsumableArray","id","content","checked","_this2","this","react_default","a","createElement","className","action","method","name","onChange","onKeyPress","onBlur","document","querySelector","submit","placeholder","React","Component","classNames","require","TodosList","currentEditingItemId","handleToogleCklick","Id","map","todo","objectSpread2","handleDestroyCklick","filter","filters","activeFilterAll","activeFilterActive","activeFilterCompleted","handleChangeEditingInput","currentEditingvalue","OnBlurEditingInput","EnterOnEditingInput","blur","focus","_this$props","activeFilter","AppState","editing","completed","class","type","onDoubleClick","find","todoSearched","data-id","onClick","Main","toogleAll","checkeorNot","onetodo","style","display","length","every","htmlFor","main_TodosList","FiltersList","_ref","href","Footer","clearCompleted","footer_FiltersList","App","JSON","parse","localStorage","addItToAppState","setItem","stringify","header_Header","main_Main","footer_Footer","ReactDOM","render","src_App","getElementById"],"mappings":"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","file":"static/js/main.046a2a9d.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass Header extends React.Component {\n  state = {\n    currentInputValue: '',\n  }\n\n  handleInputChange = (event) => {\n    this.setState({ currentInputValue: event.target.value });\n  }\n\n  handleInputEnter = (event) => {\n    if (event.key === 'Enter' && this.state.currentInputValue !== '') {\n      this.SaveCurrentInput();\n    }\n  }\n\n  SaveCurrentInput = () => {\n    const unicKey = (+new Date());\n\n    if (this.state.currentInputValue !== '') {\n      this.props.AppSetState(\n        prevState => ({\n          todos: [...prevState.todos,\n            {\n              key: unicKey,\n              id: unicKey,\n              content: this.state.currentInputValue,\n              checked: false,\n\n            },\n          ],\n        })\n      );\n      this.setState({ currentInputValue: '' });\n    }\n  }\n\n  render() {\n    return (\n      <header className=\"header\">\n        <h1>todos</h1>\n\n        <form id=\"new-todo-form\" action=\"#\" method=\"#\" name=\"current-input\">\n          <input\n            value={this.state.currentInputValue}\n            onChange={this.handleInputChange}\n            onKeyPress={this.handleInputEnter}\n            onBlur={() => {\n              document.querySelector('#new-todo-form').submit();\n              this.SaveCurrentInput();\n            }}\n            className=\"new-todo\"\n            placeholder=\"What needs to be done?\"\n          />\n        </form>\n      </header>\n    );\n  }\n}\n\nHeader.propTypes = {\n  AppSetState: PropTypes.func.isRequired,\n};\n\nexport default Header;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst classNames = require('classnames');\n\nclass TodosList extends React.Component {\n  state = {\n    currentEditingItemId: '',\n\n  }\n\n  componentDidUpdate() {\n    if (document.querySelector('.edit')) {\n      document.querySelector('.edit').focus();\n    }\n  }\n\n  handleToogleCklick = (Id) => {\n    /* event.persist()* якшо це сюди вставити то воно\n    спрацює без замикання, з +event.target.id */\n    this.props.AppSetState(\n      prevState => ({\n        todos: [...prevState.todos\n          .map((todo) => {\n            if (todo.id === Id) {\n              return {\n                ...todo, checked: !todo.checked,\n              };\n            }\n\n            return todo;\n          }),\n        ],\n      })\n    );\n  }\n\n  handleDestroyCklick = (Id) => {\n    /* event.persist()* якшо це сюди вставити то воно спрацює\n    без замикання, з +event.target.id */\n    this.props.AppSetState(\n      prevState => ({\n        todos: [...prevState.todos\n          .filter((todo) => {\n            if (todo.id === Id) {\n              return false;\n            }\n\n            return true;\n          }),\n        ],\n      })\n    );\n  }\n\n  filters = filter => ({\n    activeFilterAll: () => true,\n\n    activeFilterActive: todo => todo.checked === false,\n\n    activeFilterCompleted: todo => todo.checked === true,\n  }[filter]);\n\n  handleChangeEditingInput = (event) => {\n    this.setState(\n      {\n        currentEditingvalue: event.target.value,\n      }\n    );\n  }\n\n  OnBlurEditingInput = () => {\n    this.props.AppSetState(\n      prevState => ({\n        todos: prevState.todos\n          .map(\n            (todo) => {\n              if (todo.id === this.state.currentEditingItemId) {\n                return {\n                  ...todo,\n                  content: this.state.currentEditingvalue || todo.content,\n                };\n              }\n\n              return todo;\n            }\n          ),\n      })\n    );\n\n    this.setState({\n      currentEditingItemId: '',\n      currentEditingvalue: '',\n    });\n  }\n\n  EnterOnEditingInput = (event) => {\n    if (event.key === 'Enter') {\n      document.querySelector('.edit').blur();\n    }\n  }\n\n  render() {\n    const { todos, activeFilter, AppState } = this.props;\n    const { handleToogleCklick, handleDestroyCklick } = this;\n\n    return (\n      <ul className=\"todo-list\">\n        {\n          todos\n            .filter(todo => (activeFilter !== ''\n              ? this.filters(activeFilter)(todo) : true))\n            .map(todo => (\n              <li\n                className={\n                  classNames(\n                    {\n                      editing: this.state.currentEditingItemId === todo.id,\n                      completed: todo.checked === true,\n                    }\n\n                  )\n                }\n                key={todo.key}\n              >\n                <div className={todo.class}>\n                  <input\n                    onChange={() => {\n                      handleToogleCklick(todo.id);\n                    }}\n                    checked={todo.checked}\n                    type=\"checkbox\"\n                    className=\"toggle\"\n                    id={todo.id}\n                  />\n\n                  {\n                    this.state.currentEditingItemId === todo.id\n                      ? (\n                        <input\n                          className=\"edit\"\n                          value={\n                            this.state.currentEditingvalue\n                          }\n                          onChange={this.handleChangeEditingInput}\n                          onBlur={this.OnBlurEditingInput}\n                          onKeyPress={this.EnterOnEditingInput}\n                        />\n                      )\n                      : (\n                        <p\n                          onDoubleClick={() => {\n                            this.setState(\n                              {\n                                currentEditingItemId: todo.id,\n                                currentEditingvalue: AppState.todos\n                                  .find(todoSearched => (\n                                    todoSearched.id === todo.id))\n                                  .content,\n                              }\n                            );\n                          }}\n                          data-id={todo.id}\n                        >\n                          {todo.content}\n                        </p>\n                      )\n                  }\n\n                  <button\n                    type=\"button\"\n                    data-id={todo.id}\n                    onClick={() => handleDestroyCklick(todo.id)}\n                    className=\"destroy\"\n                  />\n                </div>\n              </li>\n            ))\n        }\n      </ul>\n    );\n  }\n}\n\nTodosList.propTypes = {\n\n  activeFilter: PropTypes.string.isRequired,\n  todos: PropTypes.arrayOf(PropTypes.any).isRequired,\n  AppState: PropTypes.shape({\n    todos: PropTypes.arrayOf(PropTypes.any),\n  }).isRequired,\n  AppSetState: PropTypes.func.isRequired,\n};\n\nexport default TodosList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport TodosList from './TodosList';\n\nclass Main extends React.Component {\n  toogleAll = () => {\n    this.props.AppSetState((prevState) => {\n      const checkeorNot = prevState.todos\n        .find(onetodo => onetodo.checked === false);\n\n      return {\n        todos: prevState.todos.map(\n          (todo) => {\n            if (checkeorNot) {\n              return {\n                ...todo,\n                checked: true,\n              };\n            }\n\n            return {\n              ...todo,\n              checked: !todo.checked,\n            };\n          }\n        ),\n\n      };\n    });\n  }\n\n  render() {\n    const { AppState } = this.props;\n\n    return (\n      <section className=\"main\" style={{ display: 'block' }}>\n        <input\n          checked={\n            AppState.todos.length > 0\n              ? AppState.todos.every(todo => todo.checked)\n              : false\n          }\n\n          onChange={this.toogleAll}\n          type=\"checkbox\"\n          id=\"toggle-all\"\n          className=\"toggle-all\"\n        />\n        <label htmlFor=\"toggle-all\">Mark all as complete</label>\n\n        <TodosList\n          AppSetState={this.props.AppSetState}\n          activeFilter={AppState.activeFilter}\n          todos={AppState.todos}\n          AppState={AppState}\n        />\n      </section>\n    );\n  }\n}\n\nMain.propTypes = {\n  AppState: PropTypes.shape(\n    {\n      todos: PropTypes.arrayOf(PropTypes.any),\n      activeFilter: PropTypes.any,\n    }\n  ).isRequired,\n\n  AppSetState: PropTypes.func.isRequired,\n};\n\nexport default Main;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst FiltersList = ({ AppSetState, AppState }) => (\n  <ul className=\"filters\">\n    <li>\n      <a\n        href=\"#/\"\n        onClick={() => {\n          AppSetState({ activeFilter: 'activeFilterAll' });\n        }}\n        className={AppState.activeFilter === 'activeFilterAll'\n          ? ('selected') : ''}\n      >\n            All\n      </a>\n    </li>\n\n    <li>\n      <a\n        href=\"#/active\"\n        onClick={() => {\n          AppSetState({ activeFilter: 'activeFilterActive' });\n        }}\n        className={AppState.activeFilter === 'activeFilterActive'\n          ? ('selected') : ''}\n      >\n            Active\n      </a>\n    </li>\n\n    <li>\n      <a\n        href=\"#/completed\"\n        onClick={() => {\n          AppSetState({ activeFilter: 'activeFilterCompleted' });\n        }}\n        className={AppState.activeFilter === 'activeFilterCompleted'\n          ? ('selected') : ''}\n      >\n            Completed\n      </a>\n    </li>\n  </ul>\n);\n\nFiltersList.propTypes = {\n  AppState: PropTypes.shape(\n    {\n      todos: PropTypes.arrayOf(PropTypes.any),\n      activeFilter: PropTypes.any,\n    }\n  ).isRequired,\n\n  AppSetState: PropTypes.func.isRequired,\n};\n\nexport default FiltersList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport FiltersList from './FiltersList';\n\nclass Footer extends React.Component {\n  clearCompleted = () => {\n    this.props.AppSetState(\n      prevState => ({\n        todos: prevState.todos\n          .filter(\n            todo => !todo.checked\n          ),\n      })\n    );\n  }\n\n  render() {\n    const { AppState } = this.props;\n\n    return (\n      <footer className=\"footer\" style={{ display: 'block' }}>\n        <span className=\"todo-count\">\n          {AppState.todos.filter(todo => !todo.checked).length}\n          {' '}\n          items left\n        </span>\n\n        <FiltersList {...this.props} />\n\n        <button\n          onClick={this.clearCompleted}\n          type=\"button\"\n          className={\n            (AppState.todos\n              .find(todo => todo.checked)\n              ? 'clear-completed' : 'hidden')\n          }\n        >\n          clear-completed\n        </button>\n      </footer>\n    );\n  }\n}\n\nFooter.propTypes = {\n  AppState: PropTypes.shape(\n    {\n      todos: PropTypes.arrayOf(PropTypes.any),\n      activeFilter: PropTypes.any,\n    }\n  ).isRequired,\n\n  AppSetState: PropTypes.func.isRequired,\n};\n\nexport default Footer;\n","import React from 'react';\nimport Header from './header/Header';\nimport Main from './main/Main';\nimport Footer from './footer/Footer';\n\nclass App extends React.Component {\n  state = {\n    todos: JSON.parse(localStorage.todos) || [],\n    activeFilter: 'activeFilterAll',\n  }\n\n  componentDidUpdate() {\n    localStorage.setItem('todos', JSON.stringify(this.state.todos));\n  }\n\n  AppSetState = (addItToAppState) => {\n    this.setState(addItToAppState);\n  }\n\n  render() {\n    return (\n      <section className=\"todoapp\">\n        <Header\n          AppSetState={this.AppSetState}\n          AppState={this.state}\n        />\n\n        <Main\n          AppSetState={this.AppSetState}\n          AppState={this.state}\n          todos={this.state.todos}\n          activeFilter={this.state.activeFilter}\n        />\n\n        <Footer AppSetState={this.AppSetState} AppState={this.state} />\n      </section>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './base.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}