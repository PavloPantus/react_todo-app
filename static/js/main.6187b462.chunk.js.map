{"version":3,"sources":["header/Header.js","main/TodosList.js","main/Main.js","footer/FiltersList.js","footer/Footer.js","App.js","index.js"],"names":["Header","state","currentInputValue","handleInputChange","event","_this","setState","target","value","SaveCurrentInput","uniqueKey","Date","props","AppSetState","prevState","todos","concat","Object","toConsumableArray","key","id","content","checked","_this2","this","react_default","a","createElement","className","onSubmit","action","method","name","onChange","onBlur","document","querySelector","submit","placeholder","React","Component","classNames","require","TodosList","currentEditingItemId","handleToogleCklick","Id","map","todo","objectSpread2","handleDestroyCklick","filter","filters","activeFilterAll","activeFilterActive","activeFilterCompleted","handleChangeEditingInput","currentEditingvalue","OnBlurEditingInput","EnterOnEditingInput","blur","focus","_this$props","activeFilter","AppState","editing","completed","class","type","onKeyPress","onDoubleClick","find","todoSearched","data-id","onClick","Main","toogleAll","checkeorNot","some","onetodo","style","display","length","every","htmlFor","main_TodosList","FiltersList","_ref","entries","FILTER_TYPES","_ref2","_ref3","slicedToArray","href","Footer","clearCompleted","footer_FiltersList","App","undefined","localStorage","JSON","parse","All","Active","Completed","addItToAppState","setItem","stringify","header_Header","main_Main","footer_Footer","ReactDOM","render","src_App","getElementById"],"mappings":"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","file":"static/js/main.6187b462.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass Header extends React.Component {\n  state = {\n    currentInputValue: '',\n  }\n\n  handleInputChange = (event) => {\n    this.setState({ currentInputValue: event.target.value });\n  }\n\n  SaveCurrentInput = () => {\n    const uniqueKey = (+new Date());\n\n    if (this.state.currentInputValue !== '') {\n      this.props.AppSetState(\n        prevState => ({\n          todos: [...prevState.todos,\n            {\n              key: uniqueKey,\n              id: uniqueKey,\n              content: this.state.currentInputValue,\n              checked: false,\n\n            },\n          ],\n        })\n      );\n      this.setState({ currentInputValue: '' });\n    }\n  }\n\n  render() {\n    return (\n      <header className=\"header\">\n        <h1>todos</h1>\n\n        <form\n          onSubmit={this.SaveCurrentInput}\n          id=\"new-todo-form\"\n          action=\"\"\n          method=\"\"\n          name=\"current-input\"\n        >\n          <input\n            value={this.state.currentInputValue}\n            onChange={this.handleInputChange}\n            onBlur={() => {\n              document.querySelector('#new-todo-form').submit();\n              this.SaveCurrentInput();\n            }}\n            className=\"new-todo\"\n            placeholder=\"What needs to be done?\"\n          />\n        </form>\n      </header>\n    );\n  }\n}\n\nHeader.propTypes = {\n  AppSetState: PropTypes.func.isRequired,\n};\n\nexport default Header;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst classNames = require('classnames');\n\nclass TodosList extends React.Component {\n  state = {\n    currentEditingItemId: '',\n\n  }\n\n  componentDidUpdate() {\n    if (document.querySelector('.edit')) {\n      document.querySelector('.edit').focus();\n    }\n  }\n\n  handleToogleCklick = (Id) => {\n    /* event.persist()* якшо це сюди вставити то воно\n    спрацює без замикання, з +event.target.id */\n    this.props.AppSetState(\n      prevState => ({\n        todos: [...prevState.todos\n          .map((todo) => {\n            if (todo.id === Id) {\n              return {\n                ...todo, checked: !todo.checked,\n              };\n            }\n\n            return todo;\n          }),\n        ],\n      })\n    );\n  }\n\n  handleDestroyCklick = (Id) => {\n    /* event.persist()* якшо це сюди вставити то воно спрацює\n    без замикання, з +event.target.id */\n    this.props.AppSetState(\n      prevState => ({\n        todos: [...prevState.todos\n          .filter(todo => todo.id !== Id),\n        ],\n      })\n    );\n  }\n\n  filters = filter => ({\n    activeFilterAll: () => true,\n\n    activeFilterActive: todo => !todo.checked,\n\n    activeFilterCompleted: todo => todo.checked,\n  }[filter]);\n\n  handleChangeEditingInput = (event) => {\n    this.setState(\n      {\n        currentEditingvalue: event.target.value,\n      }\n    );\n  }\n\n  OnBlurEditingInput = () => {\n    this.props.AppSetState(\n      prevState => ({\n        todos: prevState.todos\n          .map(\n            (todo) => {\n              if (todo.id === this.state.currentEditingItemId) {\n                return {\n                  ...todo,\n                  content: this.state.currentEditingvalue || todo.content,\n                };\n              }\n\n              return todo;\n            }\n          ),\n      })\n    );\n\n    this.setState({\n      currentEditingItemId: '',\n      currentEditingvalue: '',\n    });\n  }\n\n  EnterOnEditingInput = (event) => {\n    if (event.key === 'Enter') {\n      document.querySelector('.edit').blur();\n    }\n  }\n\n  render() {\n    const { todos, activeFilter, AppState } = this.props;\n    const { handleToogleCklick, handleDestroyCklick } = this;\n\n    return (\n      <ul className=\"todo-list\">\n        {\n          todos\n            .filter(todo => (activeFilter !== ''\n              ? this.filters(activeFilter)(todo) : true))\n            .map(todo => (\n              <li\n                className={\n                  classNames(\n                    {\n                      editing: this.state.currentEditingItemId === todo.id,\n                      completed: todo.checked === true,\n                    }\n\n                  )\n                }\n                key={todo.key}\n              >\n                <div className={todo.class}>\n                  <input\n                    onChange={() => {\n                      handleToogleCklick(todo.id);\n                    }}\n                    checked={todo.checked}\n                    type=\"checkbox\"\n                    className=\"toggle\"\n                    id={todo.id}\n                  />\n\n                  {\n                    this.state.currentEditingItemId === todo.id\n                      ? (\n                        <input\n                          className=\"edit\"\n                          value={\n                            this.state.currentEditingvalue\n                          }\n                          onChange={this.handleChangeEditingInput}\n                          onBlur={this.OnBlurEditingInput}\n                          onKeyPress={this.EnterOnEditingInput}\n                        />\n                      )\n                      : (\n                        <p\n                          onDoubleClick={() => {\n                            this.setState(\n                              {\n                                currentEditingItemId: todo.id,\n                                currentEditingvalue: AppState.todos\n                                  .find(todoSearched => (\n                                    todoSearched.id === todo.id))\n                                  .content,\n                              }\n                            );\n                          }}\n                          data-id={todo.id}\n                        >\n                          {todo.content}\n                        </p>\n                      )\n                  }\n\n                  <button\n                    type=\"button\"\n                    data-id={todo.id}\n                    onClick={() => handleDestroyCklick(todo.id)}\n                    className=\"destroy\"\n                  />\n                </div>\n              </li>\n            ))\n        }\n      </ul>\n    );\n  }\n}\n\nTodosList.propTypes = {\n\n  activeFilter: PropTypes.string.isRequired,\n  todos: PropTypes.arrayOf(PropTypes.any).isRequired,\n  AppState: PropTypes.shape({\n    todos: PropTypes.arrayOf(PropTypes.any),\n  }).isRequired,\n  AppSetState: PropTypes.func.isRequired,\n};\n\nexport default TodosList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport TodosList from './TodosList';\n\nclass Main extends React.Component {\n  toogleAll = () => {\n    this.props.AppSetState((prevState) => {\n      const checkeorNot = prevState.todos\n        .some(onetodo => !onetodo.checked);\n\n      return {\n        todos: prevState.todos.map(\n          (todo) => {\n            if (checkeorNot) {\n              return {\n                ...todo,\n                checked: true,\n              };\n            }\n\n            return {\n              ...todo,\n              checked: !todo.checked,\n            };\n          }\n        ),\n\n      };\n    });\n  }\n\n  render() {\n    const { AppState } = this.props;\n\n    return (\n      <section className=\"main\" style={{ display: 'block' }}>\n        <input\n          checked={\n            AppState.todos.length > 0\n              ? AppState.todos.every(todo => todo.checked)\n              : false\n          }\n\n          onChange={this.toogleAll}\n          type=\"checkbox\"\n          id=\"toggle-all\"\n          className=\"toggle-all\"\n        />\n        <label htmlFor=\"toggle-all\">Mark all as complete</label>\n\n        <TodosList\n          AppSetState={this.props.AppSetState}\n          activeFilter={AppState.activeFilter}\n          todos={AppState.todos}\n          AppState={AppState}\n        />\n      </section>\n    );\n  }\n}\n\nMain.propTypes = {\n  AppState: PropTypes.shape(\n    {\n      todos: PropTypes.arrayOf(PropTypes.any),\n      activeFilter: PropTypes.any,\n    }\n  ).isRequired,\n\n  AppSetState: PropTypes.func.isRequired,\n};\n\nexport default Main;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst FiltersList = ({ AppSetState, AppState }) => (\n  <ul className=\"filters\">\n    {\n      Object.entries(AppState.FILTER_TYPES)\n        .map(\n          ([name, value]) => (\n            <li key={name}>\n              <a\n                href=\"#/\"\n                onClick={() => {\n                  AppSetState({ activeFilter: value });\n                }}\n                className={AppState.activeFilter === value\n                  ? 'selected' : ''}\n              >\n                {name}\n              </a>\n            </li>\n          )\n\n        )\n    }\n  </ul>\n);\n\nFiltersList.propTypes = {\n  AppState: PropTypes.shape(\n    {\n      todos: PropTypes.arrayOf(PropTypes.any),\n      activeFilter: PropTypes.any,\n    }\n  ).isRequired,\n\n  AppSetState: PropTypes.func.isRequired,\n};\n\nexport default FiltersList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport FiltersList from './FiltersList';\n\nclass Footer extends React.Component {\n  clearCompleted = () => {\n    this.props.AppSetState(\n      prevState => ({\n        todos: prevState.todos\n          .filter(\n            todo => !todo.checked\n          ),\n      })\n    );\n  }\n\n  render() {\n    const { AppState } = this.props;\n\n    return (\n      <footer className=\"footer\" style={{ display: 'block' }}>\n        <span className=\"todo-count\">\n          {AppState.todos.filter(todo => !todo.checked).length}\n          {' '}\n          items left\n        </span>\n\n        <FiltersList {...this.props} />\n\n        <button\n          onClick={this.clearCompleted}\n          type=\"button\"\n          className={\n            (AppState.todos\n              .find(todo => todo.checked)\n              ? 'clear-completed' : 'hidden')\n          }\n        >\n          clear-completed\n        </button>\n      </footer>\n    );\n  }\n}\n\nFooter.propTypes = {\n  AppState: PropTypes.shape(\n    {\n      todos: PropTypes.arrayOf(PropTypes.any),\n      activeFilter: PropTypes.any,\n    }\n  ).isRequired,\n\n  AppSetState: PropTypes.func.isRequired,\n};\n\nexport default Footer;\n","import React from 'react';\nimport Header from './header/Header';\nimport Main from './main/Main';\nimport Footer from './footer/Footer';\n\nclass App extends React.Component {\n  state = {\n    todos: (() => {\n      if (localStorage.todos !== undefined) {\n        return [...JSON.parse(localStorage.todos)];\n      }\n\n      return [];\n    })(),\n    activeFilter: 'activeFilterAll',\n\n    FILTER_TYPES: {\n      All: 'activeFilterAll',\n      Active: 'activeFilterActive',\n      Completed: 'activeFilterCompleted',\n    },\n  }\n\n  componentDidUpdate() {\n    localStorage.setItem('todos', JSON.stringify(this.state.todos));\n  }\n\n  AppSetState = (addItToAppState) => {\n    this.setState(addItToAppState);\n  }\n\n  render() {\n    return (\n      <section className=\"todoapp\">\n        <Header\n          AppSetState={this.AppSetState}\n          AppState={this.state}\n        />\n\n        <Main\n          AppSetState={this.AppSetState}\n          AppState={this.state}\n          todos={this.state.todos}\n          activeFilter={this.state.activeFilter}\n        />\n\n        <Footer\n          AppSetState={this.AppSetState}\n          AppState={this.state}\n          FILTER_TYPES={this.state.FILTER_TYPES}\n        />\n      </section>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './base.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}