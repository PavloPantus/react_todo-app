{"version":3,"sources":["header/Header.js","main/TodosList.js","main/Main.js","footer/FiltersList.js","footer/Footer.js","App.js","index.js"],"names":["Header","state","currentInputValue","handleInputChange","event","_this","setState","target","value","handleInputEnter","unicKey","Date","key","props","AppSetState","prevState","todos","concat","Object","toConsumableArray","id","content","checked","react_default","a","createElement","className","this","onChange","onKeyPress","placeholder","React","Component","classNames","require","TodosList","currentEditingItemId","handleToogleCklick","Id","map","todo","objectSpread2","handleDestroyCklick","filter","filters","activeFilterAll","activeFilterActive","activeFilterCompleted","handleChangeEditingInput","currentEditingvalue","OnBlurEditingInput","EnterOnEditingInput","document","querySelector","blur","focus","_this2","_this$props","activeFilter","AppState","editing","completed","class","type","find","todoSearched","onBlur","onDoubleClick","data-id","onClick","Main","toogleAll","checkeorNot","onetodo","style","display","length","every","htmlFor","main_TodosList","FiltersList","_ref","href","Footer","clearCompleted","footer_FiltersList","App","addItToAppState","header_Header","main_Main","footer_Footer","ReactDOM","render","src_App","getElementById"],"mappings":"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","file":"static/js/main.756969ec.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass Header extends React.Component {\n  state = {\n    currentInputValue: '',\n  }\n\n  handleInputChange = (event) => {\n    this.setState({ currentInputValue: event.target.value });\n  }\n\n  handleInputEnter = (event) => {\n    const unicKey = (+new Date());\n\n    if (event.key === 'Enter' && this.state.currentInputValue !== '') {\n      this.props.AppSetState(\n        prevState => ({\n          todos: [...prevState.todos,\n            {\n              key: unicKey,\n              id: unicKey,\n              content: this.state.currentInputValue,\n              checked: false,\n\n            },\n          ],\n        })\n      );\n\n      this.setState({ currentInputValue: '' });\n    }\n  }\n\n  render() {\n    return (\n      <header className=\"header\">\n        <h1>todos</h1>\n\n        <input\n          value={this.state.currentInputValue}\n          onChange={this.handleInputChange}\n          onKeyPress={this.handleInputEnter}\n          className=\"new-todo\"\n          placeholder=\"What needs to be done?\"\n        />\n      </header>\n    );\n  }\n}\n\nHeader.propTypes = {\n  AppSetState: PropTypes.func.isRequired,\n};\n\nexport default Header;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst classNames = require('classnames');\n\nclass TodosList extends React.Component {\n  state = {\n    currentEditingItemId: '',\n\n  }\n\n  componentDidUpdate() {\n    if (document.querySelector('.edit')) {\n      document.querySelector('.edit').focus();\n    }\n  }\n\n  handleToogleCklick = (Id) => {\n    /* event.persist()* якшо це сюди вставити то воно\n    спрацює без замикання, з +event.target.id */\n    this.props.AppSetState(\n      prevState => ({\n        todos: [...prevState.todos\n          .map((todo) => {\n            if (todo.id === Id) {\n              return {\n                ...todo, checked: !todo.checked,\n              };\n            }\n\n            return todo;\n          }),\n        ],\n      })\n    );\n  }\n\n  handleDestroyCklick = (Id) => {\n    /* event.persist()* якшо це сюди вставити то воно спрацює\n    без замикання, з +event.target.id */\n    this.props.AppSetState(\n      prevState => ({\n        todos: [...prevState.todos\n          .filter((todo) => {\n            if (todo.id === Id) {\n              return false;\n            }\n\n            return true;\n          }),\n        ],\n      })\n    );\n  }\n\n  filters = filter => ({\n    activeFilterAll: () => true,\n\n    activeFilterActive: todo => todo.checked === false,\n\n    activeFilterCompleted: todo => todo.checked === true,\n  }[filter]);\n\n  handleChangeEditingInput = (event) => {\n    this.setState(\n      {\n        currentEditingvalue: event.target.value,\n      }\n    );\n  }\n\n  OnBlurEditingInput = () => {\n    this.props.AppSetState(\n      prevState => ({\n        todos: prevState.todos\n          .map(\n            (todo) => {\n              if (todo.id === this.state.currentEditingItemId) {\n                return {\n                  ...todo,\n                  content: this.state.currentEditingvalue || todo.content,\n                };\n              }\n\n              return todo;\n            }\n          ),\n      })\n    );\n\n    this.setState({\n      currentEditingItemId: '',\n    });\n  }\n\n  EnterOnEditingInput = (event) => {\n    if (event.key === 'Enter') {\n      document.querySelector('.edit').blur();\n    }\n  }\n\n  render() {\n    const { todos, activeFilter, AppState } = this.props;\n    const { handleToogleCklick, handleDestroyCklick } = this;\n\n    return (\n      <ul className=\"todo-list\">\n        {\n          todos\n            .filter(todo => (activeFilter !== ''\n              ? this.filters(activeFilter)(todo) : true))\n            .map(todo => (\n              <li\n                className={\n                  classNames(\n                    {\n                      editing: this.state.currentEditingItemId === todo.id,\n                      completed: todo.checked === true,\n                    }\n\n                  )\n                }\n                key={todo.key}\n              >\n                <div className={todo.class}>\n                  <input\n                    onChange={() => {\n                      handleToogleCklick(todo.id);\n                    }}\n                    checked={todo.checked}\n                    type=\"checkbox\"\n                    className=\"toggle\"\n                    id={todo.id}\n                  />\n\n                  {\n                    this.state.currentEditingItemId === todo.id\n                      ? (\n                        <input\n                          className=\"edit\"\n                          value={this.state.currentEditingvalue\n                          || AppState.todos\n                            .find(todoSearched => todoSearched.id === todo.id)\n                            .content\n                          }\n                          onChange={this.handleChangeEditingInput}\n                          onBlur={this.OnBlurEditingInput}\n                          onKeyPress={this.EnterOnEditingInput}\n                        />\n                      )\n                      : (\n                        <p\n                          onDoubleClick={() => {\n                            this.setState(\n                              {\n                                currentEditingItemId: todo.id,\n                              }\n                            );\n                          }}\n                          data-id={todo.id}\n                        >\n                          {todo.content}\n                        </p>\n                      )\n                  }\n\n                  <button\n                    type=\"button\"\n                    data-id={todo.id}\n                    onClick={() => handleDestroyCklick(todo.id)}\n                    className=\"destroy\"\n                  />\n                </div>\n              </li>\n            ))\n        }\n      </ul>\n    );\n  }\n}\n\nTodosList.propTypes = {\n\n  activeFilter: PropTypes.string.isRequired,\n  todos: PropTypes.arrayOf(PropTypes.any).isRequired,\n  AppState: PropTypes.shape({\n    todos: PropTypes.arrayOf(PropTypes.any),\n  }).isRequired,\n  AppSetState: PropTypes.func.isRequired,\n};\n\nexport default TodosList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport TodosList from './TodosList';\n\nclass Main extends React.Component {\n  toogleAll = () => {\n    this.props.AppSetState((prevState) => {\n      const checkeorNot = prevState.todos\n        .find(onetodo => onetodo.checked === false);\n\n      return {\n        todos: prevState.todos.map(\n          (todo) => {\n            if (checkeorNot) {\n              return {\n                ...todo,\n                checked: true,\n              };\n            }\n\n            return {\n              ...todo,\n              checked: !todo.checked,\n            };\n          }\n        ),\n\n      };\n    });\n  }\n\n  render() {\n    const { AppState } = this.props;\n\n    return (\n      <section className=\"main\" style={{ display: 'block' }}>\n        <input\n          checked={\n            AppState.todos.length > 0\n              ? AppState.todos.every(todo => todo.checked)\n              : false\n          }\n\n          onChange={this.toogleAll}\n          type=\"checkbox\"\n          id=\"toggle-all\"\n          className=\"toggle-all\"\n        />\n        <label htmlFor=\"toggle-all\">Mark all as complete</label>\n\n        <TodosList\n          AppSetState={this.props.AppSetState}\n          activeFilter={AppState.activeFilter}\n          todos={AppState.todos}\n          AppState={AppState}\n        />\n      </section>\n    );\n  }\n}\n\nMain.propTypes = {\n  AppState: PropTypes.shape(\n    {\n      todos: PropTypes.arrayOf(PropTypes.any),\n      activeFilter: PropTypes.any,\n    }\n  ).isRequired,\n\n  AppSetState: PropTypes.func.isRequired,\n};\n\nexport default Main;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst FiltersList = ({ AppSetState, AppState }) => (\n  <ul className=\"filters\">\n    <li>\n      <a\n        href=\"#/\"\n        onClick={() => {\n          AppSetState({ activeFilter: 'activeFilterAll' });\n        }}\n        className={AppState.activeFilter === 'activeFilterAll'\n          ? ('selected') : ''}\n      >\n            All\n      </a>\n    </li>\n\n    <li>\n      <a\n        href=\"#/active\"\n        onClick={() => {\n          AppSetState({ activeFilter: 'activeFilterActive' });\n        }}\n        className={AppState.activeFilter === 'activeFilterActive'\n          ? ('selected') : ''}\n      >\n            Active\n      </a>\n    </li>\n\n    <li>\n      <a\n        href=\"#/completed\"\n        onClick={() => {\n          AppSetState({ activeFilter: 'activeFilterCompleted' });\n        }}\n        className={AppState.activeFilter === 'activeFilterCompleted'\n          ? ('selected') : ''}\n      >\n            Completed\n      </a>\n    </li>\n  </ul>\n);\n\nFiltersList.propTypes = {\n  AppState: PropTypes.shape(\n    {\n      todos: PropTypes.arrayOf(PropTypes.any),\n      activeFilter: PropTypes.any,\n    }\n  ).isRequired,\n\n  AppSetState: PropTypes.func.isRequired,\n};\n\nexport default FiltersList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport FiltersList from './FiltersList';\n\nclass Footer extends React.Component {\n  clearCompleted = () => {\n    this.props.AppSetState(\n      prevState => ({\n        todos: prevState.todos\n          .filter(\n            todo => !todo.checked\n          ),\n      })\n    );\n  }\n\n  render() {\n    const { AppState } = this.props;\n\n    return (\n      <footer className=\"footer\" style={{ display: 'block' }}>\n        <span className=\"todo-count\">\n          {AppState.todos.filter(todo => !todo.checked).length}\n          {' '}\n          items left\n        </span>\n\n        <FiltersList {...this.props} />\n\n        <button\n          onClick={this.clearCompleted}\n          type=\"button\"\n          className={\n            (AppState.todos\n              .find(todo => todo.checked)\n              ? 'clear-completed' : 'hidden')\n          }\n        >\n          clear-completed\n        </button>\n      </footer>\n    );\n  }\n}\n\nFooter.propTypes = {\n  AppState: PropTypes.shape(\n    {\n      todos: PropTypes.arrayOf(PropTypes.any),\n      activeFilter: PropTypes.any,\n    }\n  ).isRequired,\n\n  AppSetState: PropTypes.func.isRequired,\n};\n\nexport default Footer;\n","import React from 'react';\nimport Header from './header/Header';\nimport Main from './main/Main';\nimport Footer from './footer/Footer';\n\nclass App extends React.Component {\n  state = {\n    todos: [],\n    activeFilter: 'activeFilterAll',\n  }\n\n  AppSetState = (addItToAppState) => {\n    this.setState(addItToAppState);\n  }\n\n  render() {\n    return (\n      <section className=\"todoapp\">\n        <Header AppSetState={this.AppSetState} />\n\n        <Main\n          AppSetState={this.AppSetState}\n          AppState={this.state}\n          todos={this.state.todos}\n          activeFilter={this.state.activeFilter}\n        />\n\n        <Footer AppSetState={this.AppSetState} AppState={this.state} />\n      </section>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './base.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}